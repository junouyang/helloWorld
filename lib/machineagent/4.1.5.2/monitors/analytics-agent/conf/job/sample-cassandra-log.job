#
# Refer to the end of this file to have a look at a sample format of the
# log file that this job is meant to process.
#

# The version of this job configuration file. This should not be changed by the user.
version: 1

# Optional property. Defaults to "false"
#
enabled: false
startAtEnd: false

# Mandatory property.
#
# On Windows, path should be provided as if on Unix environments.
#   Ex: demo/logs
#   Ex: C:/app/logs
#
file:
    path: /var/log/cassandra
    nameGlob: system.log
#
# Optional property (Except "sourceType").
#
# These fields are in addition to the data that is already present in the
# files being tailed. Each record read from the file will be enriched with
# these fields.
#
fields:
   sourceType: apache-cassandra-log
   nodeName: Node1
   tierName: Tier1
   appName: App1

# Optional property.
#
# Grok is a way to define and use complex, nested regular expressions in an
# easy to read and use format.
#
# A Grok pattern ultimately resolves and compiles into a regular expression.
# The advantage of using Grok is its ability to compose complex patterns from
# simpler pattern definitions, like a "formal grammar".
#
# See https://grokdebug.herokuapp.com/patterns for examples.
#
# The application comes pre-loaded with some well known Grok patterns in
# the form of ".grok" files. They are available under the "conf/grok" directory.
# Custom Grok files can be added to this directory and they will be
# available for use here when the application is restarted.
#
# The Grok pattern here is meant to match a part of the log "message" string.
#
# A Grok pattern is really a regular expression with the option of referencing
# other known Grok patterns by name. Like this "%{JAVACLASS:myClassName}".
# This means that we are looking for a sub-string that looks like a Java Class
# name. Once the pattern is found, the matching sub-string will be extracted
# and stored separately as a first class field, with "myClassName" as the key.
#
# By default, this pattern does not match multiline strings. To look for
# the pattern sub-string across a multiline string, please refer to:
# http://docs.oracle.com/javase/7/docs/api/java/util/regex/Pattern.html#DOTALL
#
grok:
  patterns:
    - "%{LOGLEVEL:logLevel} \\[%{DATA:threadName}\\] %{YEAR}-%{MONTHNUM}-%{MONTHDAY} %{TIME} %{JAVACLASS:class} %{GREEDYDATA:logMessage}"

# Optional property.
#
# If records have a timestamp that should be used as "the" eventTimestamp then
# the format can be provided here to ensure that the string gets parsed and
# transformed correctly to UTC time zone.
#
# An attempt will be made to extract the timestamp automatically, failing which
# one will be added at the time the record is read from the file.
#
# UTC time zone is used throughout the system to ensure consistency of
# timestamps across sources from different time zones. This means that all
# timestamps should be converted to UTC time zone.
#
# If the format ends with a "z" or "Z" then the time zone offset is used to
# convert to UTC time. No time zone means local time zone.
#
# A reference list of available patterns can be found here:
# http://www.joda.org/joda-time/key_format.html
#
eventTimestamp:
   pattern: "yyyy-MM-dd HH:mm:ss,SSS"


# ####################################
# ###   Start sample file format   ###
# ####################################
#
# INFO [main] 2015-02-18 15:50:00,882 CassandraDaemon.java (line 135) Logging initialized
# INFO [main] 2015-02-18 15:50:00,927 YamlConfigurationLoader.java (line 80) Loading settings from file:/opt/apache-cassandra-2.0.12/conf/cassandra.yaml
# INFO [main] 2015-02-18 15:50:01,604 DatabaseDescriptor.java (line 143) Data files directories: [/var/lib/cassandra/data]
# INFO [main] 2015-02-18 15:50:01,605 DatabaseDescriptor.java (line 144) Commit log directory: /var/lib/cassandra/commitlog
# INFO [main] 2015-02-18 15:50:01,605 DatabaseDescriptor.java (line 184) DiskAccessMode 'auto' determined to be mmap, indexAccessMode is mmap
# INFO [main] 2015-02-18 15:50:01,606 DatabaseDescriptor.java (line 198) disk_failure_policy is stop
# INFO [main] 2015-02-18 15:50:01,606 DatabaseDescriptor.java (line 199) commit_failure_policy is stop
# INFO [main] 2015-02-18 15:50:01,615 DatabaseDescriptor.java (line 269) Global memtable threshold is enabled at 489MB
# INFO [main] 2015-02-18 15:50:01,871 DatabaseDescriptor.java (line 408) Not using multi-threaded compaction
# INFO [main] 2015-02-18 15:50:02,174 YamlConfigurationLoader.java (line 80) Loading settings from file:/opt/apache-cassandra-2.0.12/conf/cassandra.yaml
#
# ##################################
# ###   End sample file format   ###
# ##################################
