# The version of this job configuration file. This should not be changed by the user.
version: 1

# Optional property. Defaults to "false"
#
enabled: false
startAtEnd: false

# Mandatory property.
#
# On Windows, path should be provided as if on Unix environments.
#   Ex: demo/logs
#   Ex: C:/app/logs
#
file:
    path: ${REDIS_LOG_PATH}
    nameGlob: redis.log

# Optional property (Except "sourceType").
#
# These fields are in addition to the data that is already present in the
# files being tailed. Each record read from the file will be enriched with
# these fields.
#
fields:
   sourceType: redis-log
   nodeName: Node1
   tierName: Tier1
   appName: App1

# Optional property.
#
# Grok is a way to define and use complex, nested regular expressions in an
# easy to read and use format.
#
# A Grok pattern ultimately resolves and compiles into a regular expression.
# The advantage of using Grok is its ability to compose complex patterns from
# simpler pattern definitions, like a "formal grammar".
#
# See https://grokdebug.herokuapp.com/patterns for examples.
#
# The application comes pre-loaded with some well known Grok patterns in
# the form of ".grok" files. They are available under the "conf/grok" directory.
# Custom Grok files can be added to this directory and they will be
# available for use here when the application is restarted.
#
# The Grok patterns here are meant to match a part of the log "message" string.
# If multiple Grok patterns are provided, each one will be applied to the
# "message" string individually.
#
# A Grok pattern is really a regular expression with the option of referencing
# other known Grok patterns by name. Like this "%{JAVACLASS:myClassName}".
# This means that we are looking for a sub-string that looks like a Java Class
# name. Once the pattern is found, the matching sub-string will be extracted
# and stored separately as a first class field, with "myClassName" as the key.
#
# By default, these patterns do not match multiline strings. To look for
# the pattern sub-string across a multiline string, please refer to:
# http://docs.oracle.com/javase/7/docs/api/java/util/regex/Pattern.html#DOTALL
#
# This Grok pattern has been configured to pick fields from log messages that
# span across multiple lines (?s). It also has an ad hoc regular expression
# defined to recognize AM/PM. "SPACE" in a multiline Grok pattern will
# automatically recognize newlines and whitespace characters.
#
grok:
  patterns:
    - "%{REDISLOG}"

# Optional property.
#
# If records have a timestamp that should be used as "the" eventTimestamp then
# the format can be provided here to ensure that the string gets parsed and
# transformed correctly to UTC time zone.
#
# An attempt will be made to extract the timestamp automatically, failing which
# one will be added at the time the record is read from the file.
#
# UTC time zone is used throughout the system to ensure consistency of
# timestamps across sources from different time zones. This means that all
# timestamps should be converted to UTC time zone.
#
# If the format ends with a "z" or "Z" then the time zone offset is used to
# convert to UTC time. No time zone means local time zone.
#
# A reference list of available patterns can be found here:
# http://www.joda.org/joda-time/key_format.html
#
eventTimestamp:
   pattern: "dd MMM HH:mm:ss"


# ####################################
# ###   Start sample file format   ###
# ####################################
#
# [12082] 23 Jan 14:12:40.486 # Server started, Redis version 2.8.17
# [12082] 23 Jan 14:12:40.490 # WARNING overcommit_memory is set to 0! Background save may fail under low memory condition. To fix this issue add 'vm.overcommit_memory = 1' to /etc/sysctl.conf and then reboot or run the command 'sysctl vm.overcommit_memory=1' for this to take effect.
# [12082] 23 Jan 14:12:40.494 * DB loaded from disk: 0.000 seconds
# [12082] 23 Jan 14:12:40.498 * The server is now ready to accept connections on port 6379
# [12082] 23 Jan 14:13:40.498 * The server is now ready to accept connections on port 6379
# ##################################
# ###   End sample file format   ###
# ##################################
